<script>
(function() {
    'use strict';
    
    // Theme toggle functionality (loaded at bottom for performance)
    function initThemeToggle() {
        const toggle = document.getElementById('theme-toggle');
        if (!toggle) return;
        
        // Get current theme state
        const savedTheme = localStorage.getItem('theme');
        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const isDark = savedTheme ? savedTheme === 'dark' : systemPrefersDark;
        
        // Sync toggle with current theme (theme already applied by inline script)
        toggle.checked = isDark;
        
        // Update theme color meta tag to match current theme
        updateThemeColor(isDark);
        
        // Listen for toggle changes
        toggle.addEventListener('change', function() {
            const isDark = this.checked;
            setTheme(isDark);
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
        
        // Listen for system theme changes
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(e) {
            if (!localStorage.getItem('theme')) {
                setTheme(e.matches);
                toggle.checked = e.matches;
            }
        });
    }
    
    function setTheme(isDark) {
        document.documentElement.style.colorScheme = isDark ? 'dark' : 'light';
        
        // Update Safari toolbar theme color
        updateThemeColor(isDark);
    }
    
    function updateThemeColor(isDark) {
        // Define theme colors (matching your Flexoki palette)
        const lightColor = '#FFFCF0'; // flexoki-paper
        const darkColor = '#100F0F';  // flexoki-black
        
        // Remove existing theme-color meta tags
        const existingThemeColorTags = document.querySelectorAll('meta[name="theme-color"]');
        existingThemeColorTags.forEach(tag => tag.remove());
        
        // Create new theme-color meta tag
        const themeColorMeta = document.createElement('meta');
        themeColorMeta.name = 'theme-color';
        themeColorMeta.content = isDark ? darkColor : lightColor;
        
        // Insert the new meta tag
        document.head.appendChild(themeColorMeta);
    }
    
    // Initialize immediately since DOM is ready (script at bottom of page)
    initThemeToggle();
})();
</script>
